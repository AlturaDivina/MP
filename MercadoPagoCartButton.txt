import * as React from "react"
import { addPropertyControls, ControlType } from "framer"

export function MercadoPagoCartButton(props) {
    const {
        buttonColor = "#F26F32",
        buttonSize = 24,
        width = 50,
        height = 50,
        onCartUpdate = () => {},
        cartWidth = 450,        // Nueva propiedad para el ancho del carrito
        cartHeight = 600,       // Nueva propiedad para la altura del carrito
        modalPosition = "right" // Nueva propiedad para la posición del modal
    } = props
    
    // Clean color format (remove # if present)
    const cleanColor = buttonColor.startsWith("#") 
        ? buttonColor.substring(1) 
        : buttonColor
    
    // Generate a unique ID for the cart container
    const cartContainerId = React.useMemo(() => 
        `mp-cart-container-${Math.random().toString(36).substring(2, 9)}`, 
    [])
    
    // URL for the cart iframe
    const baseUrl = "https://mercadopagoiframe.vercel.app/cart-button"
    const cartUrl = `${baseUrl}?buttonColor=${cleanColor}&buttonSize=${buttonSize}`
    
    React.useEffect(() => {
        // Create a container for the cart that will be positioned as a modal
        const createCartContainer = () => {
            // Check if container already exists
            let container = document.getElementById(cartContainerId)
            if (!container) {
                container = document.createElement('div')
                container.id = cartContainerId
                container.style.position = 'fixed'
                
                // Posición basada en la preferencia
                if (modalPosition === "center") {
                    container.style.left = '50%'
                    container.style.top = '50%'
                    container.style.transform = 'translate(-50%, -50%)'
                } else if (modalPosition === "left") {
                    container.style.left = '20px'
                    container.style.top = '80px'
                } else { // default: right
                    container.style.right = '20px'
                    container.style.top = '80px'
                }
                
                container.style.width = `${cartWidth}px`
                container.style.height = `${cartHeight}px`
                container.style.zIndex = '9999'
                container.style.display = 'none'
                container.style.backgroundColor = '#fff'
                container.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)'
                container.style.borderRadius = '8px'
                container.style.overflow = 'hidden'
                container.style.maxWidth = '90vw'       // Evita que exceda el ancho de la ventana
                container.style.maxHeight = '90vh'      // Evita que exceda la altura de la ventana
                
                // Overlay para que se pueda cerrar haciendo clic fuera
                const overlay = document.createElement('div')
                overlay.style.position = 'fixed'
                overlay.style.top = '0'
                overlay.style.left = '0'
                overlay.style.width = '100%'
                overlay.style.height = '100%'
                overlay.style.backgroundColor = 'rgba(0,0,0,0.3)'
                overlay.style.zIndex = '9998'
                overlay.style.display = 'none'
                overlay.onclick = () => {
                    container.style.display = 'none'
                    overlay.style.display = 'none'
                }
                document.body.appendChild(overlay)
                
                // Add close button
                const closeBtn = document.createElement('button')
                closeBtn.innerText = '×'
                closeBtn.style.position = 'absolute'
                closeBtn.style.right = '10px'
                closeBtn.style.top = '10px'
                closeBtn.style.background = 'none'
                closeBtn.style.border = 'none'
                closeBtn.style.fontSize = '24px'
                closeBtn.style.cursor = 'pointer'
                closeBtn.style.zIndex = '10000'
                closeBtn.onclick = () => {
                    container.style.display = 'none'
                    overlay.style.display = 'none'
                }
                container.appendChild(closeBtn)
                
                // Create iframe for cart content
                const cartIframe = document.createElement('iframe')
                cartIframe.src = `https://mercadopagoiframe.vercel.app/cart?buttonColor=${cleanColor}`
                cartIframe.style.width = '100%'
                cartIframe.style.height = '100%'
                cartIframe.style.border = 'none'
                container.appendChild(cartIframe)
                
                document.body.appendChild(container)
                
                // Guardar referencia al overlay en el container
                container.overlay = overlay
            }
            return container
        }
        
        // Handle messages from iframe
        const handleMessage = (event) => {
            if (!event.origin.includes('mercadopagoiframe.vercel.app')) {
                return
            }
            
            if (event.data.type === 'MP_CART_UPDATE') {
                if (onCartUpdate) {
                    onCartUpdate(event.data.cart)
                }
            }
            
            if (event.data.type === 'MP_CART_OPEN') {
                const container = createCartContainer()
                container.style.display = 'block'
                if (container.overlay) {
                    container.overlay.style.display = 'block'
                }
            }
        }
        
        window.addEventListener('message', handleMessage)
        createCartContainer() // Initialize container
        
        return () => {
            window.removeEventListener('message', handleMessage)
            const container = document.getElementById(cartContainerId)
            if (container) {
                if (container.overlay) {
                    document.body.removeChild(container.overlay)
                }
                document.body.removeChild(container)
            }
        }
    }, [buttonColor, buttonSize, cartContainerId, cartWidth, cartHeight, modalPosition])
    
    return (
        <iframe
            src={cartUrl}
            width={width}
            height={height}
            style={{ border: "none", overflow: "visible" }}
        />
    )
}

// Agregar controles de propiedades para Framer
addPropertyControls(MercadoPagoCartButton, {
    buttonColor: {
        title: "Button Color",
        type: ControlType.Color,
        defaultValue: "#F26F32"
    },
    buttonSize: {
        title: "Button Size",
        type: ControlType.Number,
        defaultValue: 24,
        min: 16,
        max: 48,
        step: 1
    },
    width: {
        title: "Button Width",
        type: ControlType.Number,
        defaultValue: 50,
        min: 40,
        max: 200
    },
    height: {
        title: "Button Height",
        type: ControlType.Number,
        defaultValue: 50,
        min: 40,
        max: 200
    },
    cartWidth: {
        title: "Cart Modal Width",
        type: ControlType.Number,
        defaultValue: 450,
        min: 300,
        max: 800,
        step: 10
    },
    cartHeight: {
        title: "Cart Modal Height", 
        type: ControlType.Number,
        defaultValue: 600,
        min: 400,
        max: 900,
        step: 10
    },
    modalPosition: {
        title: "Modal Position",
        type: ControlType.SegmentedEnum,
        options: ["left", "center", "right"],
        defaultValue: "right"
    },
    onCartUpdate: {
        type: ControlType.EventHandler
    }
})